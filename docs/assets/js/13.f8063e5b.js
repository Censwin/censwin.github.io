(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{564:function(t,a,e){"use strict";e.r(a);var _=e(13),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_001-报文结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_001-报文结构"}},[t._v("#")]),t._v(" 001 报文结构")]),t._v(" "),e("h3",{attrs:{id:"起始行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#起始行"}},[t._v("#")]),t._v(" 起始行")]),t._v(" "),e("p",[t._v("GET /home HTTP/1.1")]),t._v(" "),e("p",[t._v("方法 + 路径 + 协议")]),t._v(" "),e("h3",{attrs:{id:"头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#头部"}},[t._v("#")]),t._v(" 头部")]),t._v(" "),e("p",[t._v("字段名+字段值")]),t._v(" "),e("p",[t._v("如："),e("code",[t._v("date: Wed, 26 Jan 2022 05:46:51 GMT")])]),t._v(" "),e("p",[t._v("格式：")]),t._v(" "),e("ol",[e("li",[t._v("字段名不区分大小写")]),t._v(" "),e("li",[t._v("字段名不能出现空格及下划线")]),t._v(" "),e("li",[t._v("必须加"),e("code",[t._v(":")])])]),t._v(" "),e("h3",{attrs:{id:"空行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#空行"}},[t._v("#")]),t._v(" 空行")]),t._v(" "),e("p",[t._v("用于分割头部与实体")]),t._v(" "),e("h3",{attrs:{id:"实体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实体"}},[t._v("#")]),t._v(" 实体")]),t._v(" "),e("p",[t._v("具体数据，请求报文对应"),e("code",[t._v("请求体")]),t._v(",响应报文对应"),e("code",[t._v("响应体")])]),t._v(" "),e("h2",{attrs:{id:"_002-http-请求方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_002-http-请求方式"}},[t._v("#")]),t._v(" 002 HTTP 请求方式")]),t._v(" "),e("h3",{attrs:{id:"请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求方法"}},[t._v("#")]),t._v(" 请求方法")]),t._v(" "),e("ul",[e("li",[t._v("GET：提交、获取资源")]),t._v(" "),e("li",[t._v("POST：提交、获取资源")]),t._v(" "),e("li",[t._v("PUT：修改数据")]),t._v(" "),e("li",[t._v("DELECT：删除数据")]),t._v(" "),e("li",[t._v("OPTIONS：列出可对资源实行的请求方法，用于跨域")]),t._v(" "),e("li",[t._v("HEAD：获取资源元信息")]),t._v(" "),e("li",[t._v("CONNECT：建立连接通道，用于代理服务器")]),t._v(" "),e("li",[t._v("TRACE：追踪请求-响应的传输路径")])]),t._v(" "),e("h3",{attrs:{id:"get-与-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-与-post"}},[t._v("#")]),t._v(" GET 与 POST")]),t._v(" "),e("p",[t._v("开始之前我们先看一下标准答案")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/brower/http1.jpg")}}),t._v(" "),e("p",[t._v("从标准上看有以下区别")]),t._v(" "),e("ul",[e("li",[t._v("GET 用于获取信息，是无副作用的，是幂等的，且可缓存")]),t._v(" "),e("li",[t._v("POST 用于修改服务器上的数据，有副作用，非幂等，不可缓存")])]),t._v(" "),e("blockquote",[e("p",[t._v("幂等：任意多次执行所产生的影响均与一次执行的影响相同 （如： setTrue() ）")])]),t._v(" "),e("p",[t._v("在带参数的报文中，GET 的参数在url中，POST 的参数则在 body 中")]),t._v(" "),e("h4",{attrs:{id:"报文区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#报文区别"}},[t._v("#")]),t._v(" 报文区别")]),t._v(" "),e("p",[t._v("如：参数 username：admin")]),t._v(" "),e("p",[t._v("GET 的简约报文为")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("GET /index.php?username=admin HTTP/1.1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("POST 的简约报文为")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("POST /index.php HTTP/1.1\nHost: localhost\n\nusername=admin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h4",{attrs:{id:"无关安全问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无关安全问题"}},[t._v("#")]),t._v(" 无关安全问题")]),t._v(" "),e("p",[t._v("有些解释认为POST 比 GET 安全，因为POST不会在地址栏显示数据")]),t._v(" "),e("p",[t._v("但从传输角度来说，两者都是不安全的，因为 HTTP 是明文传输协议，想要数据安全只有加密 也就是 HTTPS")]),t._v(" "),e("h4",{attrs:{id:"get-的长度限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-的长度限制"}},[t._v("#")]),t._v(" GET 的长度限制")]),t._v(" "),e("p",[t._v("在网上看到很多关于两者区别的文章都有这一条，提到浏览器地址栏输入的参数是有限的")]),t._v(" "),e("p",[t._v("但是 HTTP 并没有 body 和 url 长度的相关限制，对 URL 限制主要是在 "),e("strong",[t._v("浏览器")]),t._v(" 和 "),e("strong",[t._v("服务器")])]),t._v(" "),e("h4",{attrs:{id:"post-方法会产生两个tcp数据包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post-方法会产生两个tcp数据包"}},[t._v("#")]),t._v(" POST 方法会产生两个TCP数据包？")]),t._v(" "),e("p",[t._v("有些文章称")]),t._v(" "),e("blockquote",[e("p",[t._v("post 会将 header 和 body 分开发送，先发送 header，服务端返回 100 状态码再发送 body")])]),t._v(" "),e("p",[t._v("但HTTP 协议中没有明确说明 POST 会产生两个 TCP 数据包，而且经过（chrome）实测也并未将header与body分开")]),t._v(" "),e("p",[t._v("所以，分开发送可能是某些浏览器的特殊请求方法，"),e("strong",[t._v("不属于 POST  行为")])]),t._v(" "),e("h4",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("ul",[e("li",[t._v("从缓存角度：GET有缓存留下历史记录，而 POST 默认不会")]),t._v(" "),e("li",[t._v("从报文角度：两个存在报文结构差别")]),t._v(" "),e("li",[t._v("从幂等角度：GET 幂等，POST 非幂等")]),t._v(" "),e("li",[t._v("从编码角度：GET 只接收 ASCII 字符，POST 无限制")])]),t._v(" "),e("h2",{attrs:{id:"_003-理解-uri"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_003-理解-uri"}},[t._v("#")]),t._v(" 003 理解 URI")]),t._v(" "),e("p",[e("strong",[t._v("URI")]),t._v(", 全称为(Uniform Resource Identifier), 也就是"),e("strong",[t._v("统一资源标识符")]),t._v("，它的作用很简单，就是区分互联网上不同的资源，URI 完整结构："),e("br"),t._v(" "),e("img",{attrs:{src:t.$withBase("/brower/uri.jpg")}})]),t._v(" "),e("h4",{attrs:{id:"结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("scheme")]),t._v(" 表示协议名，比如"),e("code",[t._v("http")]),t._v(", "),e("code",[t._v("https")]),t._v(", "),e("code",[t._v("file")]),t._v("等等。后面必须和"),e("code",[t._v("://")]),t._v("连在一起")]),t._v(" "),e("li",[e("strong",[t._v("user:passwd")]),t._v("@ 表示登录主机时的用户信息，不过很不安全，不推荐使用，也不常用")]),t._v(" "),e("li",[e("strong",[t._v("host:port")]),t._v("表示主机名和端口")]),t._v(" "),e("li",[e("strong",[t._v("path")]),t._v("：表示请求路径，标记资源所在位置")]),t._v(" "),e("li",[e("strong",[t._v("query")]),t._v("：表示查询参数，为"),e("code",[t._v("key=val")]),t._v("这种形式，多个键值对之间用"),e("code",[t._v("&")]),t._v("隔开")]),t._v(" "),e("li",[e("strong",[t._v("fragment")]),t._v("：表示 URI 所定位的资源内的一个"),e("strong",[t._v("锚点")]),t._v("，浏览器可以根据这个锚点跳转到对应的位置")])]),t._v(" "),e("h4",{attrs:{id:"uri-编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uri-编码"}},[t._v("#")]),t._v(" URI 编码")]),t._v(" "),e("p",[e("strong",[t._v("URI 只能使用"),e("code",[t._v("ASCII")]),t._v(", ASCII 之外的字符是不支持显示的；")])]),t._v(" "),e("p",[t._v("因此，URI 引入了"),e("code",[t._v("编码")]),t._v("机制，将所有"),e("strong",[t._v("非 ASCII 码字符")]),t._v("和"),e("strong",[t._v("界定符")]),t._v("转为十六进制字节值，然后在前面加个"),e("code",[t._v("%")])]),t._v(" "),e("h2",{attrs:{id:"_004-http-状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_004-http-状态码"}},[t._v("#")]),t._v(" 004 HTTP 状态码")]),t._v(" "),e("p",[t._v("这里有一览表"),e("a",{attrs:{href:"https://www.runoob.com/http/http-status-codes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("runoob"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("着重注意下 "),e("code",[t._v("301")]),t._v(" 永久重定向和"),e("code",[t._v("302")]),t._v("临时重定向")]),t._v(" "),e("h2",{attrs:{id:"_005-http的主要问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_005-http的主要问题"}},[t._v("#")]),t._v(" 005 HTTP的主要问题")]),t._v(" "),e("h3",{attrs:{id:"明文传输"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#明文传输"}},[t._v("#")]),t._v(" 明文传输")]),t._v(" "),e("p",[t._v("即协议里的报文(主要指的是头部)不使用二进制数据，而是文本形式，让 HTTP 的报文信息暴露给了外界")]),t._v(" "),e("h3",{attrs:{id:"队头阻塞"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#队头阻塞"}},[t._v("#")]),t._v(" 队头阻塞")]),t._v(" "),e("p",[t._v("由于浏览器的TCP连接数是有限的，那么当前请求耗时过长的情况下，其它的请求只能处于阻塞状态（除了2.0：http 2.0 实现了并发）")]),t._v(" "),e("h2",{attrs:{id:"_006-accept、content系列字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_006-accept、content系列字段"}},[t._v("#")]),t._v(" 006 Accept、Content系列字段")]),t._v(" "),e("h3",{attrs:{id:"数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[t._v("#")]),t._v(" 数据格式")]),t._v(" "),e("p",[e("code",[t._v("Accept")]),t._v(" 用于让接收端指定数据格式，而相对的用于标记报文 body 部分的数据格式则用 "),e("code",[t._v("Content-Type")])]),t._v(" "),e("p",[t._v("这两个字段的取值可以分为下面几类：")]),t._v(" "),e("ul",[e("li",[t._v("text： text/html, text/plain, text/css 等")]),t._v(" "),e("li",[t._v("image: image/gif, image/jpeg, image/png 等")]),t._v(" "),e("li",[t._v("audio/video: audio/mpeg, video/mp4 等")]),t._v(" "),e("li",[t._v("application: application/json, application/javascript, application/pdf, application/octet-stream")])]),t._v(" "),e("h3",{attrs:{id:"压缩方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压缩方式"}},[t._v("#")]),t._v(" 压缩方式")]),t._v(" "),e("p",[t._v("当然一般这些数据都是会进行编码压缩的，采取什么样的压缩方式就体现在了发送方的"),e("code",[t._v("Content-Encoding")]),t._v("字段上相对的在接受方的"),e("code",[t._v("Accept-Encoding")]),t._v("字段上")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 发送端\nContent-Encoding: gzip\n// 接收端\nAccept-Encoding: gzip\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"支持语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持语言"}},[t._v("#")]),t._v(" 支持语言")]),t._v(" "),e("p",[t._v("在需要实现国际化的方案当中，在发送方对应的字段为Content-Language，在接受方对应的字段为"),e("code",[t._v("Accept-Language")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 发送端\nContent-Language: zh-CN, zh, en\n// 接收端\nAccept-Language: zh-CN, zh, en\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"字符集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集")]),t._v(" "),e("p",[t._v("指定可以接受的字符集，由于发送端没有对应的字段，所以该值被放在了发送端的"),e("code",[t._v("Content-Type")]),t._v("中")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 发送端\nContent-Type: text/html; charset=utf-8\n// 接收端\nAccept-Charset: charset=utf-8\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"_007-数据长度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_007-数据长度"}},[t._v("#")]),t._v(" 007 数据长度")]),t._v(" "),e("h3",{attrs:{id:"定长体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定长体"}},[t._v("#")]),t._v(" 定长体")]),t._v(" "),e("p",[t._v("对于定长体而言，发送端在传输的时候一般会带上 "),e("code",[t._v("Content-Length")]),t._v(", 来指明包体的长度，"),e("code",[t._v("Content-Length")]),t._v("对于 http 传输过程起到了十分关键的作用，如果设置不当可以直接导致传输失败")]),t._v(" "),e("h3",{attrs:{id:"不定长"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不定长"}},[t._v("#")]),t._v(" 不定长")]),t._v(" "),e("p",[t._v("通过设置字段")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Transfer-Encoding: chunked\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("表示分块传输数据，设置这个字段后会自动产生两个效果:")]),t._v(" "),e("ul",[e("li",[t._v("Content-Length 字段会被忽略")]),t._v(" "),e("li",[t._v("基于长连接持续推送动态内容")])]),t._v(" "),e("h2",{attrs:{id:"_008-http-大文件传输"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_008-http-大文件传输"}},[t._v("#")]),t._v(" 008 HTTP 大文件传输")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6954868879034155022",target:"_blank",rel:"noopener noreferrer"}},[t._v("大文件分片下载"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"_009-⭐http-表单提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_009-⭐http-表单提交"}},[t._v("#")]),t._v(" 009 ⭐HTTP 表单提交")]),t._v(" "),e("p",[t._v("在 HTTP 中表单提交主要体现在两种 "),e("code",[t._v("Content-Type")]),t._v(" 值：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("application/x-www-form-urlencoded")])]),t._v(" "),e("li",[e("strong",[t._v("multipart/form-data")])])]),t._v(" "),e("h3",{attrs:{id:"application-x-www-form-urlencoded"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" application/x-www-form-urlencoded")]),t._v(" "),e("p",[t._v("这种数据格式的表单内容，有以下特点：")]),t._v(" "),e("ul",[e("li",[t._v("其中的数据会被编码成以"),e("code",[t._v("&")]),t._v("分隔的键值对")]),t._v(" "),e("li",[t._v("字符以"),e("strong",[t._v("URL编码方式")]),t._v("编码")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{a: 1, b: 2} -> a=1&b=2 -> "a%3D1%26b%3D2" // 转为 URL 编码\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"multipart-form-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multipart-form-data"}},[t._v("#")]),t._v(" multipart/form-data")]),t._v(" "),e("p",[t._v("请求头中的 "),e("code",[t._v("Content-Type")]),t._v("字段会包含"),e("code",[t._v("boundary")]),t._v("字段，这个字段的值由浏览器默认指定，用于"),e("strong",[t._v("分割多个数据")]),t._v(",它会将表单的数据处理为一条消息，以标签为单元，用分隔符分开。既可以上传键值对，也可以上传文件。当上传的字段是文件时，会有Content-Type来表名文件类型。")]),t._v(" "),e("h2",{attrs:{id:"_010-http-队头阻塞"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_010-http-队头阻塞"}},[t._v("#")]),t._v(" 010 HTTP 队头阻塞")]),t._v(" "),e("p",[t._v("由于 HTTP 传输是基于"),e("code",[t._v("请求-应答")]),t._v("的模式进行的，报文必须是一发一收，那么就导致在早期版本中会出现队首处理太慢阻塞后面请求的处理，后来经过迭代才改善这个问题，主要体现在以下几个版本中：")]),t._v(" "),e("h3",{attrs:{id:"http1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1"}},[t._v("#")]),t._v(" HTTP1")]),t._v(" "),e("p",[t._v("每一次 HTTP 请求，就要建立一个 TCP 链接,用完就断开")]),t._v(" "),e("h3",{attrs:{id:"http-1-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP 1.1")]),t._v(" "),e("p",[t._v("固 HTTP 1.1 诞生: HTTP 1.1 加入了 Keep-Alive ，只要 TCP 链接没断就能一直发送HTTP请求，但问题还没解决，这个协议模型本身还是在 HTTP/1.0 上修修补补，缺点还是有的，"),e("strong",[t._v("也就是同一个 TCP 链接上，多个 HTTP 请求彼此间是阻塞的，也就是请求 A 先得到响应后，请求 B 才会开始发送")]),t._v("。 那么有读者就要问了为什么控制台上看起来是并发了。其实实现并发只能建立多个TCP链接，各个浏览器各有不同 如 Chrome 为6个、Safari 4 个、IE则各版本不同，也就是说一个域名可以同时建立6个TCP连接，以此来并发6个HTTP请求。（但是后端也同样可以限制并发个数）")]),t._v(" "),e("h4",{attrs:{id:"拓展域名分片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展域名分片"}},[t._v("#")]),t._v(" 拓展域名分片")]),t._v(" "),e("p",[t._v("以 "),e("code",[t._v("chrome")]),t._v(" 为例，如果 6 个连接依然不能满足产品需求，那应该怎么办呢？那么我们可以多分几个域名，比如我们可以拆分出 "),e("code",[t._v("content1.api.com")]),t._v(" 和 "),e("code",[t._v("content2.api.com")]),t._v(",这样我们就可以建立12个连接了，事实上也更好地解决了队头阻塞的问题，但是本质上不可能套娃似的无限叠加，知道 2.0 出现")]),t._v(" "),e("h3",{attrs:{id:"http2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),e("p",[t._v("HTTP 2.0：2.0真正意义上实现了 HTTP 并发，一个 tcp 连接可以并发多个 HTTP 请求，请求官网 https://http2.akamai.com/demo 打开控制台，可以看到并发了上百个请求，目前已经有许多大厂支持了 HTTP2.0了")]),t._v(" "),e("h3",{attrs:{id:"总结-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("HTTP 并发数取决于 HTTP 协议、浏览器限制、后端限制")]),t._v(" "),e("h2",{attrs:{id:"_011-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_011-cookie"}},[t._v("#")]),t._v(" 011 Cookie")]),t._v(" "),e("h3",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),e("p",[t._v("前面说到了 HTTP 是一个无状态的协议，每次 http 请求都是独立的，默认不需要保留状态信息。")]),t._v(" "),e("p",[t._v("HTTP 为此引入了 Cookie ，Cookie 本质上是一个存储在客户端的一个很小的文件，文件内以键值对的方式存储。当客户端向"),e("strong",[t._v("同一域名")]),t._v("发起请求时，就会带上相同的 Cookie ，服务器便可以拿到 Cookie 进行解析。")]),t._v(" "),e("p",[t._v("而服务端则通过 "),e("strong",[t._v("响应头")]),t._v("的"),e("code",[t._v("Set-Cookie")]),t._v("字段来对客户端写入 Cookie, 如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 响应头\nSet-Cookie: ge_wms_session=eyJpdiI6Ildsa01mVG03NFUyQlEyVDNteFY; expires=Thu, 27-Jan-2022 08:52:40 GMT; Max-Age=7200; path=/; httponly\n// 请求头\nCookie: ge_wms_session=eyJpdiI6Ildsa01mVG03NFUyQlEyVDNteFY\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),e("h4",{attrs:{id:"有效期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有效期"}},[t._v("#")]),t._v(" 有效期")]),t._v(" "),e("p",[t._v("Cookie 的有效期可以通过"),e("code",[t._v("Expires")]),t._v("和"),e("code",[t._v("Max-Age")]),t._v("两个属性来设置")]),t._v(" "),e("ul",[e("li",[t._v("Expires：指定一个绝对的过期时间(GMT格式)")]),t._v(" "),e("li",[t._v("max-age：指定的是从文档被访问后的存活时间，这个时间是个相对值(比如:3600s),相对的是文档第一次被请求时服务器记录的Request_time(请求时间)")])]),t._v(" "),e("h4",{attrs:{id:"作用域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),e("p",[t._v("同样由两个字段进行设置")]),t._v(" "),e("ul",[e("li",[t._v("path： Cookie的使用路径。如果设置为“/sessionWeb/”，则只有contextPath为“/sessionWeb”的程序可以访问该Cookie。如果设置为“/”，则本域名下contextPath都可以访问该Cookie。注意最后一个字符必须为“/”")]),t._v(" "),e("li",[t._v("domain：可以访问该Cookie的域名。如果设置为“.google.com”，则所有以“google.com”结尾的域名都可以访问该Cookie。注意第一个字符必须为“.”")])]),t._v(" "),e("h3",{attrs:{id:"安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),e("p",[t._v("如果带上"),e("code",[t._v("Secure")]),t._v("，说明只能通过 HTTPS 传输 cookie")]),t._v(" "),e("p",[t._v("如果 cookie 字段带上"),e("code",[t._v("HttpOnly")]),t._v("，那么说明只能通过 HTTP 协议传输，不能通过 JS 访问，这也是预防 XSS 攻击的重要手段")]),t._v(" "),e("p",[t._v("相应的，对于 CSRF 攻击的预防，也有"),e("code",[t._v("SameSite")]),t._v("属性")]),t._v(" "),e("h2",{attrs:{id:"_012-⭐http-缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_012-⭐http-缓存"}},[t._v("#")]),t._v(" 012 ⭐HTTP 缓存")]),t._v(" "),e("p",[t._v("浏览器缓存分为两种：强缓存、协议缓存")]),t._v(" "),e("h3",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),e("p",[t._v("当首次请求一个页面时，浏览器便会根据响应头来判断是否需要对资源进行缓存，如果响应头存在 "),e("code",[t._v("expires")]),t._v(" | "),e("code",[t._v("pragma")]),t._v(" | "),e("code",[t._v("cache-control")]),t._v(" 字段，则代表这是强缓存，浏览器就会把资源存在 "),e("em",[t._v("memory cache")]),t._v(" 或者 "),e("em",[t._v("disk cache")]),t._v(" 中。")]),t._v(" "),e("p",[t._v("第二次请求：此时浏览器会判断请求参数，如果符合强缓存条件，则直接返回状态码200，并从本地缓存中拿数据。")]),t._v(" "),e("p",[t._v("不符合则将响应参数存在 "),e("code",[t._v("request header")]),t._v(" 请求头中，看是否符合"),e("strong",[t._v("协议缓存")]),t._v("， 符合则返回状态码 304，不符合则返回全新资源。")]),t._v(" "),e("h4",{attrs:{id:"expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" expires")]),t._v(" "),e("p",[t._v("该值为一个事件戳（格林尼治时间），用来表示该资源的到期时间。当再次发起请求时，如果未超过过期时间，直接使用缓存，否则重新请求。")]),t._v(" "),e("p",[t._v("缺点是判断是否过期是根据本地时间进行判断的。")]),t._v(" "),e("h4",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),e("p",[t._v("当 "),e("code",[t._v("cache-control")]),t._v(" 存在时，优先级更高主要用于验证强缓存是否可用，字段值主要有：")]),t._v(" "),e("ul",[e("li",[t._v("public：资源客户端和服务器都可以缓存")]),t._v(" "),e("li",[t._v("privite：资源只有客户端可以缓存")]),t._v(" "),e("li",[t._v("no-cache：客户端缓存资源，"),e("strong",[t._v("但是是否使用缓存还需要经过协商缓存验证")])]),t._v(" "),e("li",[t._v("no-store：不使用缓存")]),t._v(" "),e("li",[t._v("max-age：缓存有效期")])]),t._v(" "),e("h4",{attrs:{id:"pragma"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pragma"}},[t._v("#")]),t._v(" pragma")]),t._v(" "),e("p",[t._v("HTTP 1.0 中禁用网页缓存的字段，取值为no-cache，一倍 1.1 中的 cache-control 替代")]),t._v(" "),e("h3",{attrs:{id:"缓存位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),e("p",[t._v("强缓存会将资源放到memory cache 和 disk cache 中，通过开发者工具我们可以清晰地看到缓存资源的调用：\n"),e("img",{attrs:{src:t.$withBase("/brower/http2.jpg")}})]),t._v(" "),e("p",[t._v("查找浏览器缓存时会按顺序查找：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Service Worker --\x3e Memory Cache --\x3e Disk Cache --\x3e Push Cache\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),e("p",[t._v("协商缓存是在强缓存失效后，浏览器携带缓存标识向服务器发送请求，然后由服务器根据缓存标识决定是否使用缓存的过程。比如 no-cache 并非不使用缓存，而是使用缓存需要进行一次协商，协商有两种结果：")]),t._v(" "),e("h4",{attrs:{id:"协商生效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商生效"}},[t._v("#")]),t._v(" 协商生效")]),t._v(" "),e("p",[t._v("协商生效时，返回 "),e("code",[t._v("304")]),t._v(" 并使用缓存结果")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/brower/http-cache1.jpg")}}),t._v(" "),e("h4",{attrs:{id:"协商失效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商失效"}},[t._v("#")]),t._v(" 协商失效")]),t._v(" "),e("p",[t._v("协商结果为失效时，重新返回 "),e("code",[t._v("200")]),t._v(" 及请求结果")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/brower/http-cache2.jpg")}}),t._v(" "),e("h4",{attrs:{id:"如何设置协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何设置协商缓存"}},[t._v("#")]),t._v(" "),e("strong",[t._v("如何设置协商缓存")])]),t._v(" "),e("p",[e("strong",[t._v("lost-modified / if-modified-since")]),t._v("：")]),t._v(" "),e("p",[t._v("服务端通过响应头字段 "),e("code",[t._v("last-modified")]),t._v(" 返回一个该资源在服务器中最后的修改时间，如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("lost-modified: Mon, 29 Nov 2021 08:08:24 GMT\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("客服端通过请求头字段 "),e("code",[t._v("if-modified-since")]),t._v(" 进行验证，其值即为 上一次请求的 "),e("code",[t._v("lost-modified")]),t._v(" 值，服务端以此来验证资源最后的修改时间是否大于 "),e("code",[t._v("if-modified-since")]),t._v("，如果是则返回新资源，否则返回 "),e("code",[t._v("304")]),t._v(" 代表资源无更新，可继续使用。")]),t._v(" "),e("p",[e("strong",[t._v("Etag / If-None-Match")]),t._v("：")]),t._v(" "),e("p",[t._v("Etag是服务器响应请求时，返回当前资源文件的一个唯一标识(由服务器生成)，If-None-Match 则是有客户端用于放回上一次请求的 "),e("code",[t._v("Etag")]),t._v(" 值，原理及返回结果与 "),e("code",[t._v("lost-modified / if-modified-since")]),t._v(" 一致。")]),t._v(" "),e("p",[e("em",[t._v("Etag / If-None-Match优先级高于Last-Modified / If-Modified-Since，同时存在则只有Etag / If-None-Match生效")])]),t._v(" "),e("h3",{attrs:{id:"缓存方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存方案"}},[t._v("#")]),t._v(" 缓存方案")]),t._v(" "),e("p",[t._v("目前的项目大多使用这种缓存方案的：")]),t._v(" "),e("ul",[e("li",[t._v("HTML: 协商缓存")]),t._v(" "),e("li",[t._v("css、js、图片：强缓存，文件名带上hash")])]),t._v(" "),e("h3",{attrs:{id:"强缓存与协商缓存的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存与协商缓存的区别"}},[t._v("#")]),t._v(" 强缓存与协商缓存的区别")]),t._v(" "),e("ol",[e("li",[t._v("强缓存不发请求到服务器，所以有时候资源更新了浏览器还不知道，但是协商缓存会发请求到服务器，所以资源是否更新，服务器肯定知道")]),t._v(" "),e("li",[t._v("大部分web服务器都默认开启协商缓存")])]),t._v(" "),e("h3",{attrs:{id:"刷新对于强缓存和协商缓存的影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#刷新对于强缓存和协商缓存的影响"}},[t._v("#")]),t._v(" 刷新对于强缓存和协商缓存的影响")]),t._v(" "),e("ol",[e("li",[t._v("当ctrl+f5强制刷新网页时，直接从服务器加载，跳过强缓存和协商缓存")]),t._v(" "),e("li",[t._v("当f5刷新网页时，跳过强缓存，但是会检查协商缓存")]),t._v(" "),e("li",[t._v("浏览器地址栏中写入URL，回车 浏览器发现缓存中有这个文件了，不用继续请求了，直接去缓存拿")])])])}),[],!1,null,null,null);a.default=v.exports}}]);