(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{525:function(v,e,_){"use strict";_.r(e);var s=_(6),t=Object(s.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("ol",[_("li",[_("p",[v._v("进程与线程是什么关系？")]),v._v(" "),_("p",[v._v("线程相当于一辆行驶中的车，他负责运行进程；而进程相当于在内存中占用的空间，在这块空间中执行命令存储数据等；而进程依赖于线程，当线程崩溃时进程也同样受到影响。")])]),v._v(" "),_("li",[_("p",[v._v("浏览器是单线程？多线程？单进程？多进程？")]),v._v(" "),_("p",[v._v("早期浏览器如IE6时代，使用的是单线程、单进程；所有工作都在一个进程中执行，如 页面渲染、插件等等，这导致了许多性能及安全问题；")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("单进程出现了什么问题？")]),v._v(" "),_("p",[v._v("回顾早期浏览器不难发现早期ie是单标签【每个页面一个窗口】，且所有页面都依赖于一个线程。而当时国内浏览器厂商则开始开发多标签浏览器，导致一个tab崩溃会形象整个浏览器。多个页面依赖一个线程导致了卡顿崩溃的问题（共用同一个js运行环境），后来则转到了多线程，让不同页面运行在多个单独线程下，但同时也出现了通讯问题，一个session运行在一个线程下，导致了同源页面无法访问session；")])])]),v._v(" "),_("p",[v._v("而后谷歌推出chrome，现代chrome为多线程+多进程，每个进程分管不同任务，如下")]),v._v(" "),_("ul",[_("li",[v._v("渲染进程： 负责html、js、css转换为用户交互的网页，排版引擎及V8引擎运行在该进程下；【默认情况下会为每一个Tab页面创建一个渲染引擎】")]),v._v(" "),_("li",[v._v("插件进程： 负责插件运行，因为早期ie可以安装很多插件，正式因为这些插件导致许多安全问题（直接访问系统）及性能问题（内存泄漏等）；chrome则单独将插件运行环境进行隔离，即使该进程崩溃也不会影响其他进程及线程")]),v._v(" "),_("li",[v._v("GPU进程：早期并没有GPU进程，后来为了CSS3D渲染增加了该进程；而现在的的ui及页面也都使用GPU进程进行绘制；")]),v._v(" "),_("li",[v._v("网络进程：顾名思义负责网络资源加载")]),v._v(" "),_("li",[v._v("主进程： chrome主进程，用于界面显示（其实chrome显示的是图片），用户交互，子进程管理，存储等")])])]),v._v(" "),_("li",[_("p",[v._v("既然是多进程架构 为何会遇到一个页面崩溃导致所有页面崩溃")]),v._v(" "),_("p",[v._v("同源机制 "),_("code",[v._v("process-per-site-instance")]),v._v("，当域名相同时，chrome会直接复制父页面的渲染进程；总结一下就是同一站点会被分配到一个渲染进程里去，这样的话同站点就会共享javascript执行环境")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);